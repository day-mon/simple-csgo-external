use serde::{Deserialize, Serialize};

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Offsets {
    pub timestamp: u32,
    pub signatures: Signatures,
    pub netvars: Netvars,
}


#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Signatures {
    #[serde(rename = "anim_overlays")]
    pub anim_overlays: u32,
    #[serde(rename = "clientstate_choked_commands")]
    pub clientstate_choked_commands: u32,
    #[serde(rename = "clientstate_delta_ticks")]
    pub clientstate_delta_ticks: u32,
    #[serde(rename = "clientstate_last_outgoing_command")]
    pub clientstate_last_outgoing_command: u32,
    #[serde(rename = "clientstate_net_channel")]
    pub clientstate_net_channel: u32,
    #[serde(rename = "convar_name_hash_table")]
    pub convar_name_hash_table: u32,
    pub dw_client_state: u32,
    #[serde(rename = "dwClientState_GetLocalPlayer")]
    pub dw_client_state_get_local_player: u32,
    #[serde(rename = "dwClientState_IsHLTV")]
    pub dw_client_state_is_hltv: u32,
    #[serde(rename = "dwClientState_Map")]
    pub dw_client_state_map: u32,
    #[serde(rename = "dwClientState_MapDirectory")]
    pub dw_client_state_map_directory: u32,
    #[serde(rename = "dwClientState_MaxPlayer")]
    pub dw_client_state_max_player: u32,
    #[serde(rename = "dwClientState_PlayerInfo")]
    pub dw_client_state_player_info: u32,
    #[serde(rename = "dwClientState_State")]
    pub dw_client_state_state: u32,
    #[serde(rename = "dwClientState_ViewAngles")]
    pub dw_client_state_view_angles: u32,
    pub dw_entity_list: u32,
    pub dw_force_attack: u32,
    pub dw_force_attack2: u32,
    pub dw_force_backward: u32,
    pub dw_force_forward: u32,
    pub dw_force_jump: u32,
    pub dw_force_left: u32,
    pub dw_force_right: u32,
    pub dw_game_dir: u32,
    pub dw_game_rules_proxy: u32,
    pub dw_get_all_classes: u32,
    pub dw_global_vars: u32,
    pub dw_glow_object_manager: u32,
    pub dw_input: u32,
    pub dw_interface_link_list: u32,
    pub dw_local_player: u32,
    pub dw_mouse_enable: u32,
    pub dw_mouse_enable_ptr: u32,
    pub dw_player_resource: u32,
    pub dw_radar_base: u32,
    pub dw_sensitivity: u32,
    pub dw_sensitivity_ptr: u32,
    pub dw_set_clan_tag: u32,
    pub dw_view_matrix: u32,
    pub dw_weapon_table: u32,
    pub dw_weapon_table_index: u32,
    pub dw_yaw_ptr: u32,
    pub dw_zoom_sensitivity_ratio_ptr: u32,
    pub dwb_send_packets: u32,
    #[serde(rename = "dwppDirect3DDevice9")]
    pub dwpp_direct3ddevice9: u32,
    #[serde(rename = "find_hud_element")]
    pub find_hud_element: u32,
    #[serde(rename = "force_update_spectator_glow")]
    pub force_update_spectator_glow: u32,
    #[serde(rename = "interface_engine_cvar")]
    pub interface_engine_cvar: u32,
    #[serde(rename = "is_c4_owner")]
    pub is_c4_owner: u32,
    #[serde(rename = "m_bDormant")]
    pub m_b_dormant: u32,
    #[serde(rename = "m_bIsLocalPlayer")]
    pub m_b_is_local_player: u32,
    #[serde(rename = "m_flSpawnTime")]
    pub m_fl_spawn_time: u32,
    #[serde(rename = "m_pStudioHdr")]
    pub m_p_studio_hdr: u32,
    #[serde(rename = "m_pitchClassPtr")]
    pub m_pitch_class_ptr: u32,
    #[serde(rename = "m_yawClassPtr")]
    pub m_yaw_class_ptr: u32,
    #[serde(rename = "model_ambient_min")]
    pub model_ambient_min: u32,
    #[serde(rename = "set_abs_angles")]
    pub set_abs_angles: u32,
    #[serde(rename = "set_abs_origin")]
    pub set_abs_origin: u32,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Netvars {
    #[serde(rename = "cs_gamerules_data")]
    pub cs_gamerules_data: u32,
    #[serde(rename = "m_ArmorValue")]
    pub m_armor_value: u32,
    #[serde(rename = "m_Collision")]
    pub m_collision: u32,
    #[serde(rename = "m_CollisionGroup")]
    pub m_collision_group: u32,
    #[serde(rename = "m_Local")]
    pub m_local: u32,
    #[serde(rename = "m_MoveType")]
    pub m_move_type: u32,
    #[serde(rename = "m_OriginalOwnerXuidHigh")]
    pub m_original_owner_xuid_high: u32,
    #[serde(rename = "m_OriginalOwnerXuidLow")]
    pub m_original_owner_xuid_low: u32,
    #[serde(rename = "m_SurvivalGameRuleDecisionTypes")]
    pub m_survival_game_rule_decision_types: u32,
    #[serde(rename = "m_SurvivalRules")]
    pub m_survival_rules: u32,
    #[serde(rename = "m_aimPunchAngle")]
    pub m_aim_punch_angle: u32,
    #[serde(rename = "m_aimPunchAngleVel")]
    pub m_aim_punch_angle_vel: u32,
    #[serde(rename = "m_angEyeAnglesX")]
    pub m_ang_eye_angles_x: u32,
    #[serde(rename = "m_angEyeAnglesY")]
    pub m_ang_eye_angles_y: u32,
    #[serde(rename = "m_bBombDefused")]
    pub m_b_bomb_defused: u32,
    #[serde(rename = "m_bBombPlanted")]
    pub m_b_bomb_planted: u32,
    #[serde(rename = "m_bBombTicking")]
    pub m_b_bomb_ticking: u32,
    #[serde(rename = "m_bFreezePeriod")]
    pub m_b_freeze_period: u32,
    #[serde(rename = "m_bGunGameImmunity")]
    pub m_b_gun_game_immunity: u32,
    #[serde(rename = "m_bHasDefuser")]
    pub m_b_has_defuser: u32,
    #[serde(rename = "m_bHasHelmet")]
    pub m_b_has_helmet: u32,
    #[serde(rename = "m_bInReload")]
    pub m_b_in_reload: u32,
    #[serde(rename = "m_bIsDefusing")]
    pub m_b_is_defusing: u32,
    #[serde(rename = "m_bIsQueuedMatchmaking")]
    pub m_b_is_queued_matchmaking: u32,
    #[serde(rename = "m_bIsScoped")]
    pub m_b_is_scoped: u32,
    #[serde(rename = "m_bIsValveDS")]
    pub m_b_is_valve_ds: u32,
    #[serde(rename = "m_bSpotted")]
    pub m_b_spotted: u32,
    #[serde(rename = "m_bSpottedByMask")]
    pub m_b_spotted_by_mask: u32,
    #[serde(rename = "m_bStartedArming")]
    pub m_b_started_arming: u32,
    #[serde(rename = "m_bUseCustomAutoExposureMax")]
    pub m_b_use_custom_auto_exposure_max: u32,
    #[serde(rename = "m_bUseCustomAutoExposureMin")]
    pub m_b_use_custom_auto_exposure_min: u32,
    #[serde(rename = "m_bUseCustomBloomScale")]
    pub m_b_use_custom_bloom_scale: u32,
    #[serde(rename = "m_clrRender")]
    pub m_clr_render: u32,
    #[serde(rename = "m_dwBoneMatrix")]
    pub m_dw_bone_matrix: u32,
    #[serde(rename = "m_fAccuracyPenalty")]
    pub m_f_accuracy_penalty: u32,
    #[serde(rename = "m_fFlags")]
    pub m_f_flags: u32,
    #[serde(rename = "m_flC4Blow")]
    pub m_fl_c4blow: u32,
    #[serde(rename = "m_flCustomAutoExposureMax")]
    pub m_fl_custom_auto_exposure_max: u32,
    #[serde(rename = "m_flCustomAutoExposureMin")]
    pub m_fl_custom_auto_exposure_min: u32,
    #[serde(rename = "m_flCustomBloomScale")]
    pub m_fl_custom_bloom_scale: u32,
    #[serde(rename = "m_flDefuseCountDown")]
    pub m_fl_defuse_count_down: u32,
    #[serde(rename = "m_flDefuseLength")]
    pub m_fl_defuse_length: u32,
    #[serde(rename = "m_flFallbackWear")]
    pub m_fl_fallback_wear: u32,
    #[serde(rename = "m_flFlashDuration")]
    pub m_fl_flash_duration: u32,
    #[serde(rename = "m_flFlashMaxAlpha")]
    pub m_fl_flash_max_alpha: u32,
    #[serde(rename = "m_flLastBoneSetupTime")]
    pub m_fl_last_bone_setup_time: u32,
    #[serde(rename = "m_flLowerBodyYawTarget")]
    pub m_fl_lower_body_yaw_target: u32,
    #[serde(rename = "m_flNextAttack")]
    pub m_fl_next_attack: u32,
    #[serde(rename = "m_flNextPrimaryAttack")]
    pub m_fl_next_primary_attack: u32,
    #[serde(rename = "m_flSimulationTime")]
    pub m_fl_simulation_time: u32,
    #[serde(rename = "m_flTimerLength")]
    pub m_fl_timer_length: u32,
    #[serde(rename = "m_hActiveWeapon")]
    pub m_h_active_weapon: u32,
    #[serde(rename = "m_hBombDefuser")]
    pub m_h_bomb_defuser: u32,
    #[serde(rename = "m_hMyWeapons")]
    pub m_h_my_weapons: u32,
    #[serde(rename = "m_hObserverTarget")]
    pub m_h_observer_target: u32,
    #[serde(rename = "m_hOwner")]
    pub m_h_owner: u32,
    #[serde(rename = "m_hOwnerEntity")]
    pub m_h_owner_entity: u32,
    #[serde(rename = "m_hViewModel")]
    pub m_h_view_model: u32,
    #[serde(rename = "m_iAccountID")]
    pub m_i_account_id: u32,
    #[serde(rename = "m_iClip1")]
    pub m_i_clip1: u32,
    #[serde(rename = "m_iCompetitiveRanking")]
    pub m_i_competitive_ranking: u32,
    #[serde(rename = "m_iCompetitiveWins")]
    pub m_i_competitive_wins: u32,
    #[serde(rename = "m_iCrosshairId")]
    pub m_i_crosshair_id: u32,
    #[serde(rename = "m_iDefaultFOV")]
    pub m_i_default_fov: u32,
    #[serde(rename = "m_iEntityQuality")]
    pub m_i_entity_quality: u32,
    #[serde(rename = "m_iFOV")]
    pub m_i_fov: u32,
    #[serde(rename = "m_iFOVStart")]
    pub m_i_fovstart: u32,
    #[serde(rename = "m_iGlowIndex")]
    pub m_i_glow_index: u32,
    #[serde(rename = "m_iHealth")]
    pub m_i_health: u32,
    #[serde(rename = "m_iItemDefinitionIndex")]
    pub m_i_item_definition_index: u32,
    #[serde(rename = "m_iItemIDHigh")]
    pub m_i_item_idhigh: u32,
    #[serde(rename = "m_iMostRecentModelBoneCounter")]
    pub m_i_most_recent_model_bone_counter: u32,
    #[serde(rename = "m_iObserverMode")]
    pub m_i_observer_mode: u32,
    #[serde(rename = "m_iShotsFired")]
    pub m_i_shots_fired: u32,
    #[serde(rename = "m_iState")]
    pub m_i_state: u32,
    #[serde(rename = "m_iTeamNum")]
    pub m_i_team_num: u32,
    #[serde(rename = "m_lifeState")]
    pub m_life_state: u32,
    #[serde(rename = "m_nBombSite")]
    pub m_n_bomb_site: u32,
    #[serde(rename = "m_nFallbackPaintKit")]
    pub m_n_fallback_paint_kit: u32,
    #[serde(rename = "m_nFallbackSeed")]
    pub m_n_fallback_seed: u32,
    #[serde(rename = "m_nFallbackStatTrak")]
    pub m_n_fallback_stat_trak: u32,
    #[serde(rename = "m_nForceBone")]
    pub m_n_force_bone: u32,
    #[serde(rename = "m_nModelIndex")]
    pub m_n_model_index: u32,
    #[serde(rename = "m_nTickBase")]
    pub m_n_tick_base: u32,
    #[serde(rename = "m_nViewModelIndex")]
    pub m_n_view_model_index: u32,
    #[serde(rename = "m_rgflCoordinateFrame")]
    pub m_rgfl_coordinate_frame: u32,
    #[serde(rename = "m_szCustomName")]
    pub m_sz_custom_name: u32,
    #[serde(rename = "m_szLastPlaceName")]
    pub m_sz_last_place_name: u32,
    #[serde(rename = "m_thirdPersonViewAngles")]
    pub m_third_person_view_angles: u32,
    #[serde(rename = "m_vecOrigin")]
    pub m_vec_origin: u32,
    #[serde(rename = "m_vecVelocity")]
    pub m_vec_velocity: u32,
    #[serde(rename = "m_vecViewOffset")]
    pub m_vec_view_offset: u32,
    #[serde(rename = "m_viewPunchAngle")]
    pub m_view_punch_angle: u32,
    #[serde(rename = "m_zoomLevel")]
    pub m_zoom_level: u32,
}
